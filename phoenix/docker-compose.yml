services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: universalmm
      MYSQL_DATABASE: keycloakdb
      MYSQL_USER: universal
      MYSQL_PASSWORD: universal
    volumes:
      - /data:/var/lib/mysql:rw
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "3306:3306"
    networks:
      - universal-mm-net
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u root -puniversalmm || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.1.1
    command: ["start-dev", "--http-port=8181", "--import-realm"]
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mysql
      - KC_DB_USERNAME=root
      - KC_DB_PASSWORD=universalmm
      - KC_DB_URL=jdbc:mysql://mysql:3306/keycloakdb?useUnicode=true&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
      - KC_DB_URL_HOST=mysql
      - KC_DB_URL_PORT=3306
      - KC_DB_SCHEMA=keycloakdb
      - KC_PROXY=edge
      - PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_URL=https://unistock-keeper.com
    ports:
      - "8181:8181"
    networks:
      universal-mm-net:
        aliases:
          - keycloak
    volumes:
      - ./realms/:/opt/keycloak/data/import/
      - ./themes/:/opt/keycloak/themes/
    depends_on:
      mysql:
        condition: service_healthy

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - universal-mm-net
    volumes:
      - /data/zookeeper/data:/data
      - /data/zookeeper/datalog:/datalog

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - universal-mm-net
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 1000000000 # 1 GB
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1000000000 # 1 GB
      KAFKA_MAX_REQUEST_SIZE: 1000000000 # 1 GB
    volumes:
      - /data/kafka:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092"]
      interval: 30s
      timeout: 10s
      retries: 10

  server-discovery:
    image: khaledunistock/universal-server-discovery:latest
    container_name: server-discovery
    ports:
      - "8761:8761"
    networks:
      universal-mm-net:
        aliases:
          - server-discovery

  configserver:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: configserver
    ports:
      - "8888:8888"
    networks:
      - universal-mm-net
    environment:
      - KEYCLOAK_HOSTNAME=https://unistock-keeper.com
    depends_on:
      keycloak:
        condition: service_started
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy

  api-gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "9000:9000"
    networks:
      - universal-mm-net
    environment:
      - KEYCLOAK_HOSTNAME=https://unistock-keeper.com
    depends_on:
      - configserver
      - server-discovery
      - keycloak

  keycloakuser-service:
    build:
      context: ./keycloakuser
      dockerfile: Dockerfile
    container_name: keycloakuser-service
    networks:
      - universal-mm-net
    environment:
      - KEYCLOAK_HOSTNAME=https://unistock-keeper.com
    depends_on:
      - configserver
      - api-gateway
      - server-discovery
      - keycloak

  notification-service:
    build:
      context: ./notification
      dockerfile: Dockerfile
    container_name: notification-service
    networks:
      - universal-mm-net
    depends_on:
      - configserver
      - api-gateway
      - server-discovery
      - keycloak
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KEYCLOAK_HOSTNAME=https://unistock-keeper.com

  stock-service:
    build:
      context: ./stock
      dockerfile: Dockerfile
    container_name: stock-service
    networks:
      - universal-mm-net
    depends_on:
      - configserver
      - api-gateway
      - server-discovery
      - keycloak
    environment:
      - KEYCLOAK_HOSTNAME=https://unistock-keeper.com
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  frontapp:
    build:
      context: ./phoenixfront
      dockerfile: Dockerfile
    container_name: frontapp
    ports:
      - "4200:4200"
    networks:
      - universal-mm-net
    depends_on:
      keycloak:
        condition: service_started
      api-gateway:
        condition: service_started
    environment:
      - KEYCLOAK_URL=https://unistock-keeper.com
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200"]
      interval: 30s
      timeout: 10s
      retries: 3

  proxy:
    image: nginx:alpine
    container_name: proxy
    depends_on:
      keycloak:
        condition: service_started
      api-gateway:
        condition: service_started
      frontapp:
        condition: service_healthy
    ports:
      - 80:80
    networks:
      - universal-mm-net
    volumes:
      - type: bind
        source: ./proxy/nginx-proxy.conf
        target: /etc/nginx/conf.d/proxy.conf

networks:
  universal-mm-net:
    driver: bridge