{"version":3,"file":"AccountPage.js","names":["React","ActionGroup","Button","Form","FormGroup","TextInput","InputGroup","Grid","GridItem","ExpandableSection","ValidatedOptions","PageSection","PageSectionVariants","Text","TextVariants","TextContent","AccountServiceContext","Msg","ContentPage","ContentAlert","LocaleSelector","KeycloakContext","AIACommand","ExternalLinkSquareAltIcon","AccountPage","Component","constructor","props","context","features","isRegistrationEmailAsUsername","isEditUserNameAllowed","deleteAccountAllowed","updateEmailFeatureEnabled","updateEmailActionEnabled","errors","username","firstName","lastName","email","formFields","attributes","DEFAULT_STATE","fetchPersonalInfo","value","event","target","currentTarget","name","setState","state","validationMessage","preventDefault","form","isValid","checkValidity","reqData","doPost","then","success","locale","window","location","reload","formData","FormData","validationMessages","Array","from","keys","reduce","acc","key","elements","keycloak","execute","handleChange","error","default","doGet","response","data","render","fields","light","small","localize","handleSubmit","undefined","isUpdateEmailFeatureEnabled","isUpdateEmailActionEnabled","handleEmailUpdate","isInternationalizationEnabled","Object","values","filter","e","length","handleCancel","isDeleteAccountAllowed","marginTop","handleDelete"],"sources":["../../../src/app/content/account-page/AccountPage.tsx"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport { ActionGroup,\n    Button,\n    Form,\n    FormGroup,\n    TextInput,\n    InputGroup,\n    Grid,\n    GridItem,\n    ExpandableSection,\n    ValidatedOptions,\n    PageSection,\n    PageSectionVariants,\n    Text,\n    TextVariants,\n    TextContent\n} from '@patternfly/react-core';\n\nimport { HttpResponse } from '../../account-service/account.service';\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport { Features } from '../../widgets/features';\nimport { Msg } from '../../widgets/Msg';\nimport { ContentPage } from '../ContentPage';\nimport { ContentAlert } from '../ContentAlert';\nimport { LocaleSelector } from '../../widgets/LocaleSelectors';\nimport { KeycloakContext } from '../../keycloak-service/KeycloakContext';\nimport { KeycloakService } from '../../keycloak-service/keycloak.service';\nimport { AIACommand } from '../../util/AIACommand';\nimport {ExternalLinkSquareAltIcon} from \"@patternfly/react-icons\";\n\ndeclare const features: Features;\ndeclare const locale: string;\n\ninterface AccountPageProps {\n}\n\ninterface FormFields {\n    readonly username?: string;\n    readonly firstName?: string;\n    readonly lastName?: string;\n    readonly email?: string;\n    attributes?: { locale?: [string] };\n}\n\ninterface AccountPageState {\n    readonly errors: FormFields;\n    readonly formFields: FormFields;\n}\n\n/**\n * @author Stan Silvert ssilvert@redhat.com (C) 2018 Red Hat Inc.\n */\nexport class AccountPage extends React.Component<AccountPageProps, AccountPageState> {\n    static contextType = AccountServiceContext;\n    context: React.ContextType<typeof AccountServiceContext>;\n    private isRegistrationEmailAsUsername: boolean = features.isRegistrationEmailAsUsername;\n    private isEditUserNameAllowed: boolean = features.isEditUserNameAllowed;\n    private isDeleteAccountAllowed: boolean = features.deleteAccountAllowed;\n    private isUpdateEmailFeatureEnabled: boolean = features.updateEmailFeatureEnabled;\n    private isUpdateEmailActionEnabled: boolean = features.updateEmailActionEnabled;\n    private readonly DEFAULT_STATE: AccountPageState = {\n        errors: {\n            username: '',\n            firstName: '',\n            lastName: '',\n            email: ''\n        },\n        formFields: {\n            username: '',\n            firstName: '',\n            lastName: '',\n            email: '',\n            attributes: {}\n        }\n    };\n\n    public state: AccountPageState = this.DEFAULT_STATE;\n\n    public constructor(props: AccountPageProps, context: React.ContextType<typeof AccountServiceContext>) {\n        super(props);\n        this.context = context;\n\n        this.fetchPersonalInfo();\n    }\n\n    private fetchPersonalInfo(): void {\n        this.context!.doGet<FormFields>(\"/\")\n            .then((response: HttpResponse<FormFields>) => {\n                this.setState(this.DEFAULT_STATE);\n                const formFields = response.data;\n                if (!formFields!.attributes) {\n                    formFields!.attributes = { locale: [locale] };\n                }\n                else if (!formFields!.attributes.locale) {\n                    formFields!.attributes.locale = [locale];\n                }\n\n                this.setState({...{ formFields: formFields as FormFields }});\n            });\n    }\n\n    private handleCancel = (): void => {\n        this.fetchPersonalInfo();\n    }\n\n    private handleChange = (value: string, event: React.FormEvent<HTMLInputElement>) => {\n        const target = event.currentTarget;\n        const name = target.name;\n\n        this.setState({\n            errors: { ...this.state.errors, [name]: target.validationMessage },\n            formFields: { ...this.state.formFields, [name]: value }\n        });\n    }\n\n    private handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n        const form = event.target as HTMLFormElement;\n        const isValid = form.checkValidity();\n        if (isValid) {\n            const reqData: FormFields = { ...this.state.formFields };\n            this.context!.doPost<void>(\"/\", reqData)\n                .then(() => {\n                    ContentAlert.success('accountUpdatedMessage');\n                    if (locale !== this.state.formFields.attributes!.locale![0]) {\n                        window.location.reload();\n                    }\n                });\n        } else {\n            const formData = new FormData(form);\n            const validationMessages = Array.from(formData.keys()).reduce((acc, key) => {\n                acc[key] = form.elements[key].validationMessage\n                return acc\n            }, {});\n            this.setState({\n                errors: { ...validationMessages },\n                formFields: this.state.formFields\n            });\n        }\n\n    }\n\n    private handleDelete = (keycloak: KeycloakService): void => {\n        new AIACommand(keycloak, \"delete_account\").execute();\n    }\n\n    private handleEmailUpdate = (keycloak: KeycloakService): void => {\n        new AIACommand(keycloak, \"UPDATE_EMAIL\").execute();\n    }\n\n    public render(): React.ReactNode {\n        const fields: FormFields = this.state.formFields;\n        return (\n            <ContentPage\n                title=\"personalInfoHtmlTitle\"\n                introMessage=\"personalSubMessage\"\n            >\n                <PageSection isFilled variant={PageSectionVariants.light}>\n                    <TextContent className=\"pf-u-mb-lg\">\n                        <Text component={TextVariants.small}>\n                          {Msg.localize('allFieldsRequired')}\n                        </Text>\n                    </TextContent>\n                    <Form\n                        onSubmit={(event) => this.handleSubmit(event)}\n                        className=\"personal-info-form\"\n                    >\n                        {!this.isRegistrationEmailAsUsername && fields.username != undefined && (\n                            <FormGroup\n                                label={Msg.localize(\"username\")}\n                                fieldId=\"user-name\"\n                                helperTextInvalid={this.state.errors.username}\n                                validated={\n                                    this.state.errors.username !== \"\"\n                                        ? ValidatedOptions.error\n                                        : ValidatedOptions.default\n                                }\n                            >\n                                {this.isEditUserNameAllowed && <this.UsernameInput />}\n                                {!this.isEditUserNameAllowed && (\n                                    <this.RestrictedUsernameInput />\n                                )}\n                            </FormGroup>\n                        )}\n                        {!this.isUpdateEmailFeatureEnabled && fields.email != undefined && <FormGroup\n                            label={Msg.localize('email')}\n                            fieldId=\"email-address\"\n                            helperTextInvalid={this.state.errors.email}\n                            validated={\n                                this.state.errors.email !== \"\"\n                                    ? ValidatedOptions.error\n                                    : ValidatedOptions.default\n                            }\n                        >\n                            <TextInput\n                                isRequired\n                                type=\"email\"\n                                id=\"email-address\"\n                                name=\"email\"\n                                maxLength={254}\n                                value={fields.email}\n                                onChange={this.handleChange}\n                                validated={\n                                    this.state.errors.email !== \"\"\n                                        ? ValidatedOptions.error\n                                        : ValidatedOptions.default\n                                }\n                            ></TextInput>\n                        </FormGroup> }\n                        {this.isUpdateEmailFeatureEnabled && <FormGroup\n                            label={Msg.localize('email')}\n                            fieldId=\"email-address\"\n                        >\n                            <InputGroup>\n                                <TextInput\n                                    isDisabled\n                                    type=\"email\"\n                                    id=\"email-address\"\n                                    name=\"email\"\n                                    value={fields.email}\n                                >\n                                </TextInput>\n                                {this.isUpdateEmailActionEnabled && (!this.isRegistrationEmailAsUsername || this.isEditUserNameAllowed) &&\n                                    <KeycloakContext.Consumer>\n                                        { (keycloak: KeycloakService) => (\n                                            <Button id=\"update-email-btn\"\n                                                    variant=\"link\"\n                                                    onClick={() => this.handleEmailUpdate(keycloak)}\n                                                    icon={<ExternalLinkSquareAltIcon/>}\n                                                    iconPosition=\"right\">\n                                                <Msg msgKey=\"updateEmail\" />\n                                            </Button>\n                                        )}\n                                    </KeycloakContext.Consumer>\n                                }\n                            </InputGroup>\n                        </FormGroup> }\n                        { fields.firstName != undefined && <FormGroup\n                                label={Msg.localize(\"firstName\")}\n                                fieldId=\"first-name\"\n                                helperTextInvalid={this.state.errors.firstName}\n                                validated={\n                                    this.state.errors.firstName !== \"\"\n                                        ? ValidatedOptions.error\n                                        : ValidatedOptions.default\n                                }\n                            >\n                                <TextInput\n                                    isRequired\n                                    type=\"text\"\n                                    id=\"first-name\"\n                                    name=\"firstName\"\n                                    maxLength={254}\n                                    value={fields.firstName}\n                                    onChange={this.handleChange}\n                                    validated={\n                                        this.state.errors.firstName !== \"\"\n                                            ? ValidatedOptions.error\n                                            : ValidatedOptions.default\n                                    }\n                                ></TextInput>\n                            </FormGroup>\n                        }\n                        {fields.lastName != undefined && <FormGroup\n                                label={Msg.localize(\"lastName\")}\n                                fieldId=\"last-name\"\n                                helperTextInvalid={this.state.errors.lastName}\n                                validated={\n                                    this.state.errors.lastName !== \"\"\n                                        ? ValidatedOptions.error\n                                        : ValidatedOptions.default\n                                }\n                            >\n                                <TextInput\n                                    isRequired\n                                    type=\"text\"\n                                    id=\"last-name\"\n                                    name=\"lastName\"\n                                    maxLength={254}\n                                    value={fields.lastName}\n                                    onChange={this.handleChange}\n                                    validated={\n                                        this.state.errors.lastName !== \"\"\n                                            ? ValidatedOptions.error\n                                            : ValidatedOptions.default\n                                    }\n                                ></TextInput>\n                            </FormGroup>\n                        }\n                        {features.isInternationalizationEnabled && (\n                            <FormGroup\n                                label={Msg.localize(\"selectLocale\")}\n                                isRequired\n                                fieldId=\"locale\"\n                            >\n                                <LocaleSelector\n                                    id=\"locale-selector\"\n                                    value={fields.attributes!.locale || \"\"}\n                                    onChange={(value) =>\n                                        this.setState({\n                                            errors: this.state.errors,\n                                            formFields: {\n                                                ...this.state.formFields,\n                                                attributes: {\n                                                    ...this.state.formFields.attributes,\n                                                    locale: [value],\n                                    },\n                                    },\n                                    })\n                                    }\n                                />\n                            </FormGroup>\n                        )}\n                        <ActionGroup>\n                            <Button\n                                type=\"submit\"\n                                id=\"save-btn\"\n                                variant=\"primary\"\n                                isDisabled={\n                                    Object.values(this.state.errors).filter((e) => e !== \"\")\n                                    .length !== 0\n                                }\n                            >\n                                <Msg msgKey=\"doSave\" />\n                            </Button>\n                            <Button\n                                id=\"cancel-btn\"\n                                variant=\"link\"\n                                onClick={this.handleCancel}\n                            >\n                                <Msg msgKey=\"doCancel\" />\n                            </Button>\n                        </ActionGroup>\n                    </Form>\n\n            {this.isDeleteAccountAllowed && (\n                <div id=\"delete-account\" style={{ marginTop: \"30px\" }}>\n                    <ExpandableSection toggleText={Msg.localize(\"deleteAccount\")}>\n                        <Grid hasGutter>\n                            <GridItem span={6}>\n                                <p>\n                                    <Msg msgKey=\"deleteAccountWarning\" />\n                                </p>\n                            </GridItem>\n                            <GridItem span={4}>\n                                <KeycloakContext.Consumer>\n                                    {(keycloak: KeycloakService) => (\n                                        <Button\n                                            id=\"delete-account-btn\"\n                                            variant=\"danger\"\n                                            onClick={() => this.handleDelete(keycloak)}\n                                            className=\"delete-button\"\n                                        >\n                                            <Msg msgKey=\"doDelete\" />\n                                        </Button>\n                                    )}\n                                </KeycloakContext.Consumer>\n                            </GridItem>\n                            <GridItem span={2}></GridItem>\n                        </Grid>\n                    </ExpandableSection>\n                </div>\n            )}\n            </PageSection>\n        </ContentPage>\n        );\n    }\n\n    private UsernameInput = () => (\n        <TextInput\n            isRequired\n            type=\"text\"\n            id=\"user-name\"\n            name=\"username\"\n            maxLength={254}\n            value={this.state.formFields.username}\n            onChange={this.handleChange}\n            validated={this.state.errors.username !== '' ? ValidatedOptions.error : ValidatedOptions.default}\n            >\n        </TextInput>\n    );\n\n    private RestrictedUsernameInput = () => (\n        <TextInput\n            isReadOnly\n            type=\"text\"\n            id=\"user-name\"\n            name=\"username\"\n            value={this.state.formFields.username}\n        >\n        </TextInput>\n    );\n};\n"],"mappings":"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"}