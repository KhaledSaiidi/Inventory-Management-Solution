{"version":3,"file":"GroupsPage.js","names":["React","Checkbox","DataList","DataListItem","DataListItemRow","DataListCell","DataListItemCells","ContentPage","AccountServiceContext","Msg","GroupsPage","Component","constructor","props","context","checked","event","setState","isDirectMembership","state","groups","directGroups","fetchGroups","doGet","then","response","data","groupsPaths","map","s","path","forEach","el","getParents","parentPath","slice","lastIndexOf","indexOf","name","push","emptyGroup","renderGroupList","group","appIndex","id","render","localize","changeDirectMembership","length"],"sources":["../../../src/app/content/group-page/GroupsPage.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  Checkbox,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListItemCells,\n} from '@patternfly/react-core';\n\nimport { ContentPage } from '../ContentPage';\nimport { HttpResponse } from '../../account-service/account.service';\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport { Msg } from '../../widgets/Msg';\n\nexport interface GroupsPageProps {\n}\n\nexport interface GroupsPageState {\n  groups: Group[];\n  directGroups: Group[];\n  isDirectMembership: boolean;\n}\n\ninterface Group {\n  id?: string;\n  name: string;\n  path: string;\n}\n\nexport class GroupsPage extends React.Component<GroupsPageProps, GroupsPageState> {\n  static contextType = AccountServiceContext;\n  context: React.ContextType<typeof AccountServiceContext>;\n\n  public constructor(props: GroupsPageProps, context: React.ContextType<typeof AccountServiceContext>) {\n    super(props);\n    this.context = context;\n    this.state = {\n      groups: [],\n      directGroups: [],\n      isDirectMembership: false\n    };\n\n    this.fetchGroups();\n  }\n\n  private fetchGroups(): void {\n    this.context!.doGet<Group[]>(\"/groups\")\n      .then((response: HttpResponse<Group[]>) => {\n        const directGroups = response.data || [];\n        const groups = [...directGroups];\n        const groupsPaths = directGroups.map(s => s.path);\n        directGroups.forEach((el) => this.getParents(el, groups, groupsPaths))\n        this.setState({\n          groups: groups,\n          directGroups: directGroups\n        });\n      });\n  }\n\n  private getParents(el: Group, groups: Group[], groupsPaths: string[]): void {\n    const parentPath = el.path.slice(0, el.path.lastIndexOf('/'));\n    if (parentPath && (groupsPaths.indexOf(parentPath) === -1)) {\n\n      el = {\n        name: parentPath.slice(parentPath.lastIndexOf('/')+1),\n        path: parentPath\n      };\n      groups.push(el);\n      groupsPaths.push(parentPath);\n\n      this.getParents(el, groups, groupsPaths);\n    }\n  }\n\n  private changeDirectMembership = (checked: boolean,event: React.FormEvent<HTMLInputElement> )=> {\n    this.setState({\n      isDirectMembership: checked\n    });\n  }\n\n  private emptyGroup(): React.ReactNode {\n\n    return (\n      <DataListItem key='emptyItem' aria-labelledby=\"empty-item\">\n        <DataListItemRow key='emptyRow'>\n          <DataListItemCells dataListCells={[\n            <DataListCell key='empty'><strong><Msg msgKey='noGroupsText' /></strong></DataListCell>\n          ]} />\n        </DataListItemRow>\n      </DataListItem>\n    )\n  }\n\n  private renderGroupList(group: Group, appIndex: number): React.ReactNode {\n\n    return (\n      <DataListItem id={`${appIndex}-group`} key={'group-' + appIndex} aria-labelledby=\"groups-list\" >\n        <DataListItemRow>\n          <DataListItemCells\n            dataListCells={[\n              <DataListCell id={`${appIndex}-group-name`} width={2} key={'name-' + appIndex}>\n                {group.name}\n              </DataListCell>,\n              <DataListCell id={`${appIndex}-group-path`} width={2} key={'path-' + appIndex}>\n                {group.path}\n              </DataListCell>,\n              <DataListCell id={`${appIndex}-group-directMembership`} width={2} key={'directMembership-' + appIndex}>\n                <Checkbox id={`${appIndex}-checkbox-directMembership`} isChecked={group.id != null} isDisabled={true} />\n              </DataListCell>\n            ]}\n          />\n        </DataListItemRow>\n\n      </DataListItem>\n    )\n  }\n\n  public render(): React.ReactNode {\n    return (\n      <ContentPage title={Msg.localize('groupLabel')}>\n        <DataList id=\"groups-list\" aria-label={Msg.localize('groupLabel')} isCompact>\n          <DataListItem id=\"groups-list-header\" aria-labelledby=\"Columns names\">\n            <DataListItemRow >\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key='directMembership-header' >\n                    <Checkbox\n                      label={Msg.localize('directMembership')}\n                      id=\"directMembership-checkbox\"\n                      isChecked={this.state.isDirectMembership}\n                      onChange={this.changeDirectMembership}\n                    />\n\n                  </DataListCell>\n                ]}\n              />\n            </DataListItemRow>\n          </DataListItem>\n          <DataListItem id=\"groups-list-header\" aria-labelledby=\"Columns names\">\n            <DataListItemRow >\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key='group-name-header' width={2}>\n                    <strong><Msg msgKey='Name' /></strong>\n                  </DataListCell>,\n                  <DataListCell key='group-path-header' width={2}>\n                    <strong><Msg msgKey='path' /></strong>\n                  </DataListCell>,\n                  <DataListCell key='group-direct-membership-header' width={2}>\n                    <strong><Msg msgKey='directMembership' /></strong>\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n          </DataListItem>\n          {this.state.groups.length === 0\n            ? this.emptyGroup()\n            : (this.state.isDirectMembership ? this.state.directGroups.map((group: Group, appIndex: number) =>\n              this.renderGroupList(group, appIndex)\n            ) : this.state.groups.map((group: Group, appIndex: number) =>\n              this.renderGroupList(group, appIndex)))}\n        </DataList>\n      </ContentPage>\n    );\n  }\n};\n"],"mappings":"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"}