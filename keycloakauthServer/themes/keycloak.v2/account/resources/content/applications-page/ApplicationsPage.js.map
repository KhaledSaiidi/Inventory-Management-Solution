{"version":3,"file":"ApplicationsPage.js","names":["React","DataList","DataListItem","DataListItemRow","DataListCell","DataListToggle","DataListContent","DataListItemCells","DescriptionList","DescriptionListTerm","DescriptionListGroup","DescriptionListDescription","Grid","GridItem","Button","PageSection","PageSectionVariants","Stack","InfoAltIcon","CheckIcon","ExternalLinkAltIcon","ContentPage","ContinueCancelModal","AccountServiceContext","Msg","ApplicationsPage","Component","constructor","props","context","clientId","doDelete","encodeURIComponent","then","fetchApplications","row","newIsRowOpen","state","isRowOpen","setState","applications","doGet","response","data","Array","length","fill","elementId","item","application","render","localize","light","visibility","height","map","appIndex","onToggle","window","open","effectiveUrl","clientName","userConsentRequired","offlineAccess","inUse","description","split","consent","grantedScopes","scope","scopeIndex","name","tosUri","policyUri","logoUri","Intl","DateTimeFormat","locale","year","month","day","hour","minute","second","format","createDate","removeConsent"],"sources":["../../../src/app/content/applications-page/ApplicationsPage.tsx"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport {\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListToggle,\n  DataListContent,\n  DataListItemCells,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Grid,\n  GridItem,\n  Button,\n  PageSection,\n  PageSectionVariants,\n  Stack,\n  StackItem,\n  SplitItem,\n  Split,\n  TextContent\n} from '@patternfly/react-core';\n\nimport { InfoAltIcon, CheckIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { ContentPage } from '../ContentPage';\nimport { ContinueCancelModal } from '../../widgets/ContinueCancelModal';\nimport { HttpResponse } from '../../account-service/account.service';\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport { Msg } from '../../widgets/Msg';\n\ndeclare const locale: string;\n\nexport interface ApplicationsPageProps {\n}\n\nexport interface ApplicationsPageState {\n  isRowOpen: boolean[];\n  applications: Application[];\n}\n\nexport interface GrantedScope {\n  displayTest: string;\n  id: string;\n  name: string;\n}\n\nexport interface Consent {\n  createDate: number;\n  grantedScopes: GrantedScope[];\n  lastUpdatedDate: number;\n}\n\ninterface Application {\n  effectiveUrl: string;\n  clientId: string;\n  clientName: string;\n  consent: Consent;\n  description: string;\n  inUse: boolean;\n  offlineAccess: boolean;\n  userConsentRequired: boolean;\n  scope: string[];\n  logoUri: string;\n  policyUri: string;\n  tosUri: string;\n}\n\nexport class ApplicationsPage extends React.Component<ApplicationsPageProps, ApplicationsPageState> {\n  static contextType = AccountServiceContext;\n  context: React.ContextType<typeof AccountServiceContext>;\n\n  public constructor(props: ApplicationsPageProps, context: React.ContextType<typeof AccountServiceContext>) {\n    super(props);\n    this.context = context;\n    this.state = {\n      isRowOpen: [],\n      applications: []\n    };\n\n    this.fetchApplications();\n  }\n\n  private removeConsent = (clientId: string) => {\n    this.context!.doDelete(\"/applications/\" + encodeURIComponent(clientId) + \"/consent\")\n      .then(() => {\n        this.fetchApplications();\n      });\n  }\n\n  private onToggle = (row: number): void => {\n    const newIsRowOpen: boolean[] = this.state.isRowOpen;\n    newIsRowOpen[row] = !newIsRowOpen[row];\n    this.setState({ isRowOpen: newIsRowOpen });\n  };\n\n  private fetchApplications(): void {\n    this.context!.doGet<Application[]>(\"/applications\")\n      .then((response: HttpResponse<Application[]>) => {\n        const applications = response.data || [];\n        this.setState({\n          isRowOpen: new Array(applications.length).fill(false),\n          applications: applications\n        });\n      });\n  }\n\n  private elementId(item: string, application: Application): string {\n    return `application-${item}-${application.clientId}`;\n  }\n\n  public render(): React.ReactNode {\n    return (\n      <ContentPage\n        title={Msg.localize('applicationsPageTitle')}\n        introMessage={Msg.localize('applicationsPageSubTitle')}\n      >\n        <PageSection isFilled variant={PageSectionVariants.light}>\n\n          <Stack hasGutter>\n            <DataList id=\"applications-list\" aria-label={Msg.localize('applicationsPageTitle')}>\n              <DataListItem id=\"applications-list-header\" aria-labelledby=\"Columns names\">\n                <DataListItemRow>\n                  // invisible toggle allows headings to line up properly\n                  <span style={{ visibility: 'hidden', height: 55 }}>\n                    <DataListToggle\n                      isExpanded={false}\n                      id='applications-list-header-invisible-toggle'\n                      aria-controls=\"hidden\"\n                    />\n                  </span>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key='applications-list-client-id-header' width={2} className=\"pf-u-pt-md\">\n                        <strong><Msg msgKey='applicationName' /></strong>\n                      </DataListCell>,\n                      <DataListCell key='applications-list-app-type-header' width={2} className=\"pf-u-pt-md\">\n                        <strong><Msg msgKey='applicationType' /></strong>\n                      </DataListCell>,\n                      <DataListCell key='applications-list-status' width={2} className=\"pf-u-pt-md\">\n                        <strong><Msg msgKey='status' /></strong>\n                      </DataListCell>,\n                    ]}\n                  />\n                </DataListItemRow>\n              </DataListItem>\n              {this.state.applications.map((application: Application, appIndex: number) => {\n                return (\n                  <DataListItem id={this.elementId(\"client-id\", application)} key={'application-' + appIndex} aria-labelledby=\"applications-list\" isExpanded={this.state.isRowOpen[appIndex]}>\n                    <DataListItemRow className=\"pf-u-align-items-center\">\n                      <DataListToggle\n                        onClick={() => this.onToggle(appIndex)}\n                        isExpanded={this.state.isRowOpen[appIndex]}\n                        id={this.elementId('toggle', application)}\n                        aria-controls={this.elementId(\"expandable\", application)}\n                      />\n                      <DataListItemCells\n                        className=\"pf-u-align-items-center\"\n                        dataListCells={[\n                          <DataListCell id={this.elementId('name', application)} width={2} key={'app-' + appIndex}>\n                            <Button className=\"pf-u-pl-0 title-case\" component=\"a\" variant=\"link\" onClick={() => window.open(application.effectiveUrl)}>\n                              {application.clientName || application.clientId} <ExternalLinkAltIcon/>\n                            </Button>\n                          </DataListCell>,\n                          <DataListCell id={this.elementId('internal', application)} width={2} key={'internal-' + appIndex}>\n                            {application.userConsentRequired ? Msg.localize('thirdPartyApp') : Msg.localize('internalApp')}\n                            {application.offlineAccess ? ', ' + Msg.localize('offlineAccess') : ''}\n                          </DataListCell>,\n                          <DataListCell id={this.elementId('status', application)} width={2} key={'status-' + appIndex}>\n                            {application.inUse ? Msg.localize('inUse') : Msg.localize('notInUse')}\n                          </DataListCell>\n                        ]}\n                      />\n                  </DataListItemRow>\n                  \n                  <DataListContent\n                    className=\"pf-u-pl-35xl\"\n                    hasNoPadding={false}\n                    aria-label={Msg.localize('applicationDetails')}\n                    id={this.elementId(\"expandable\", application)}\n                    isHidden={!this.state.isRowOpen[appIndex]}\n                  >\n                    <DescriptionList>\n                      <DescriptionListGroup>\n                        <DescriptionListTerm>{Msg.localize('client')}</DescriptionListTerm>\n                        <DescriptionListDescription>{application.clientId}</DescriptionListDescription>\n                      </DescriptionListGroup>\n                      {application.description &&\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>{Msg.localize('description')}</DescriptionListTerm>\n                          <DescriptionListDescription>{application.description}</DescriptionListDescription>\n                        </DescriptionListGroup>\n                      }\n                      {application.effectiveUrl &&\n                        <DescriptionListGroup>\n                          <DescriptionListTerm>URL</DescriptionListTerm>\n                          <DescriptionListDescription id={this.elementId(\"effectiveurl\", application)}>\n                            {application.effectiveUrl.split('\"')}\n                          </DescriptionListDescription>\n                        </DescriptionListGroup>\n                      }\n                      {application.consent &&\n                        <React.Fragment>\n                          <DescriptionListGroup>\n                            <DescriptionListTerm>Has access to</DescriptionListTerm>\n                            {application.consent.grantedScopes.map((scope: GrantedScope, scopeIndex: number) => {\n                                return (\n                                  <React.Fragment key={'scope-' + scopeIndex} >\n                                      <DescriptionListDescription><CheckIcon />{Msg.localize(scope.name)}</DescriptionListDescription>\n                                  </React.Fragment>\n                                )\n                              })}\n                          </DescriptionListGroup>\n                          {application.tosUri &&\n                              <DescriptionListGroup>\n                                  <DescriptionListTerm>{Msg.localize('termsOfService')}</DescriptionListTerm>\n                                  <DescriptionListDescription>{application.tosUri}</DescriptionListDescription>\n                              </DescriptionListGroup>\n                          }\n                          {application.policyUri  &&\n                             <DescriptionListGroup>\n                                 <DescriptionListTerm>{Msg.localize('policy')}</DescriptionListTerm>\n                                 <DescriptionListDescription>{application.policyUri }</DescriptionListDescription>\n                             </DescriptionListGroup>\n                          }\n                          {application.logoUri &&\n                             <DescriptionListGroup>\n                                 <DescriptionListTerm>{Msg.localize('logo')}</DescriptionListTerm>\n                                 <DescriptionListDescription><img src={application.logoUri} /></DescriptionListDescription>\n                             </DescriptionListGroup>\n                          }\n                          <DescriptionListGroup>\n                            <DescriptionListTerm>{Msg.localize('accessGrantedOn') + ': '}</DescriptionListTerm>\n                            <DescriptionListDescription>\n                              {new Intl.DateTimeFormat(locale, {\n                                  year: 'numeric',\n                                  month: 'long',\n                                  day: 'numeric',\n                                  hour: 'numeric',\n                                  minute: 'numeric',\n                                  second: 'numeric'\n                                }).format(application.consent.createDate)}\n                            </DescriptionListDescription>\n                          </DescriptionListGroup>\n                        </React.Fragment>\n                      }\n                    </DescriptionList>\n                    {(application.consent || application.offlineAccess) &&\n                    <Grid hasGutter>\n                      <hr />\n                      <GridItem>\n                        <React.Fragment>\n                          <ContinueCancelModal\n                            buttonTitle={Msg.localize('removeButton')} // required\n                            buttonVariant='secondary' // defaults to 'primary'\n                            modalTitle={Msg.localize('removeModalTitle')} // required\n                            modalMessage={Msg.localize('removeModalMessage', [application.clientId])}\n                            modalContinueButtonLabel={Msg.localize('confirmButton')} // defaults to 'Continue'\n                            onContinue={() => this.removeConsent(application.clientId)} // required\n                          />\n                        </React.Fragment>\n                      </GridItem>\n                      <GridItem><InfoAltIcon /> {Msg.localize('infoMessage')}</GridItem>\n                    </Grid>\n                    }\n                  </DataListContent>\n                  </DataListItem>\n                )\n              })}\n      </DataList>\n      </Stack>\n      </PageSection>\n      </ContentPage>\n    );\n  }\n};\n"],"mappings":"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"}