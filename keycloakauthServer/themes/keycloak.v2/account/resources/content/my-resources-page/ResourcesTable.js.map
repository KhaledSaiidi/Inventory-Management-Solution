{"version":3,"file":"ResourcesTable.js","names":["React","DataList","DataListItem","DataListItemRow","DataListCell","DataListToggle","DataListContent","DataListItemCells","Level","LevelItem","Button","DataListAction","Dropdown","DropdownPosition","DropdownItem","KebabToggle","Remove2Icon","RepositoryIcon","ShareAltIcon","EditAltIcon","AccountServiceContext","PermissionRequest","ShareTheResource","Msg","AbstractResourcesTable","EditTheResource","ContentAlert","EmptyMessageState","ContinueCancelModal","ResourcesTable","constructor","props","context","row","newIsRowOpen","state","isRowOpen","fetchPermissions","resources","data","setState","isOpen","isModalActive","contextOpen","index","length","permissions","Map","resource","doGet","encodeURIComponent","_id","then","response","newPermissions","set","removeShare","get","map","a","username","scopes","doPut","success","localize","render","visibility","name","onToggle","client","baseUrl","getClientName","shareRequests","lg","right","onContextToggle","sharedWithUsersMessage","toggle","numOthers","default"],"sources":["../../../src/app/content/my-resources-page/ResourcesTable.tsx"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport {\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListCell,\n    DataListToggle,\n    DataListContent,\n    DataListItemCells,\n    Level,\n    LevelItem,\n    Button,\n    DataListAction,\n    Dropdown,\n    DropdownPosition,\n    DropdownItem,\n    KebabToggle\n} from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\n\nimport { Remove2Icon, RepositoryIcon, ShareAltIcon, EditAltIcon } from '@patternfly/react-icons';\n\nimport { HttpResponse } from '../../account-service/account.service';\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport { PermissionRequest } from \"./PermissionRequest\";\nimport { ShareTheResource } from \"./ShareTheResource\";\nimport { Permission, Resource } from \"./resource-model\";\nimport { Msg } from '../../widgets/Msg';\nimport { ResourcesTableState, ResourcesTableProps, AbstractResourcesTable } from './AbstractResourceTable';\nimport { EditTheResource } from './EditTheResource';\nimport { ContentAlert } from '../ContentAlert';\nimport EmptyMessageState from '../../widgets/EmptyMessageState';\nimport { ContinueCancelModal } from '../../widgets/ContinueCancelModal';\n\nexport interface CollapsibleResourcesTableState extends ResourcesTableState {\n    isRowOpen: boolean[];\n    contextOpen: boolean[];\n    isModalActive: boolean;\n}\n\nexport class ResourcesTable extends AbstractResourcesTable<CollapsibleResourcesTableState> {\n    static contextType = AccountServiceContext;\n    context: React.ContextType<typeof AccountServiceContext>;\n\n    public constructor(props: ResourcesTableProps, context: React.ContextType<typeof AccountServiceContext>) {\n        super(props);\n        this.context = context;\n\n        this.state = {\n            isRowOpen: [],\n            contextOpen: [],\n            isModalActive: false,\n            permissions: new Map()\n        }\n    }\n\n    private onToggle = (row: number): void => {\n        const newIsRowOpen: boolean[] = this.state.isRowOpen;\n        newIsRowOpen[row] = !newIsRowOpen[row];\n        if (newIsRowOpen[row]) this.fetchPermissions(this.props.resources.data[row], row);\n        this.setState({ isRowOpen: newIsRowOpen });\n    };\n\n    private onContextToggle = (row: number, isOpen: boolean): void => {\n        if (this.state.isModalActive) return;\n        const data = this.props.resources.data;\n        const contextOpen = this.state.contextOpen;\n        contextOpen[row] = isOpen;\n        if (isOpen) {\n            const index = row > data.length ? row - data.length - 1 : row;\n            this.fetchPermissions(data[index], index);\n        }\n        this.setState({ contextOpen });\n    }\n\n    private fetchPermissions(resource: Resource, row: number): void {\n        this.context!.doGet(`/resources/${encodeURIComponent(resource._id)}/permissions`)\n            .then((response: HttpResponse<Permission[]>) => {\n                const newPermissions: Map<number, Permission[]> = new Map(this.state.permissions);\n                newPermissions.set(row, response.data || []);\n                this.setState({ permissions: newPermissions });\n            });\n    }\n\n    private removeShare(resource: Resource, row: number): Promise<void> {\n        const permissions = this.state.permissions.get(row)!.map(a => ({ username: a.username, scopes: [] }));\n        return this.context!.doPut(`/resources/${encodeURIComponent(resource._id)}/permissions`, permissions)\n            .then(() => {\n                ContentAlert.success(Msg.localize('unShareSuccess'));\n            });\n    }\n\n    public render(): React.ReactNode {\n        if (this.props.resources.data.length === 0) {\n            return (\n                <EmptyMessageState icon={RepositoryIcon} messageKey=\"notHaveAnyResource\"/>\n            );\n        }\n        return (\n            <DataList aria-label={Msg.localize('resources')} id=\"resourcesList\">\n                <DataListItem key='resource-header' aria-labelledby='resource-header'>\n                    <DataListItemRow>\n                        // invisible toggle allows headings to line up properly\n                        <span style={{ visibility: 'hidden' }}>\n                            <DataListToggle\n                                isExpanded={false}\n                                id='resource-header-invisible-toggle'\n                                aria-controls=\"ex-expand1\"\n                            />\n                        </span>\n                        <DataListItemCells\n                            dataListCells={[\n                                <DataListCell key='resource-name-header' width={5}>\n                                    <strong><Msg msgKey='resourceName' /></strong>\n                                </DataListCell>,\n                                <DataListCell key='application-name-header' width={5}>\n                                    <strong><Msg msgKey='application' /></strong>\n                                </DataListCell>,\n                                <DataListCell key='permission-request-header' width={5}>\n                                    <strong><Msg msgKey='permissionRequests' /></strong>\n                                </DataListCell>,\n                            ]}\n                        />\n                    </DataListItemRow>\n                </DataListItem>\n                {this.props.resources.data.map((resource: Resource, row: number) => (\n                    <DataListItem key={'resource-' + row} aria-labelledby={resource.name} isExpanded={this.state.isRowOpen[row]}>\n                        <DataListItemRow>\n                            <DataListToggle\n                                onClick={() => this.onToggle(row)}\n                                isExpanded={this.state.isRowOpen[row]}\n                                id={'resourceToggle-' + row}\n                                aria-controls=\"ex-expand1\"\n                            />\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell id={'resourceName-' + row} key={'resourceName-' + row} width={5}>\n                                        <Msg msgKey={resource.name} />\n                                    </DataListCell>,\n                                    <DataListCell id={'resourceClient-' + row} key={'resourceClient-' + row} width={5}>\n                                        <a href={resource.client.baseUrl}>{this.getClientName(resource.client)}</a>\n                                    </DataListCell>,\n                                    <DataListCell id={'resourceRequests-' + row} key={'permissionRequests-' + row} width={5}>\n                                        {resource.shareRequests.length > 0 &&\n                                            <PermissionRequest\n                                                resource={resource}\n                                                onClose={() => this.fetchPermissions(resource, row)}\n                                            ></PermissionRequest>\n                                        }\n                                    </DataListCell>\n                                ]}\n                            />\n                            <DataListAction\n                                visibility={{ lg: 'hidden' }}\n                                aria-labelledby=\"check-action-item3 check-action-action3\"\n                                id=\"check-action-action3\"\n                                aria-label=\"Actions\"\n                            >\n                                <Dropdown\n                                    isPlain\n                                    position={DropdownPosition.right}\n                                    onSelect={() => this.setState({ isModalActive: true })}\n                                    toggle={<KebabToggle onToggle={isOpen => this.onContextToggle(row + this.props.resources.data.length + 1, isOpen)} />}\n                                    isOpen={this.state.contextOpen[row + this.props.resources.data.length + 1]}\n                                    dropdownItems={[\n                                        <ShareTheResource\n                                            resource={resource}\n                                            permissions={this.state.permissions.get(row)!}\n                                            sharedWithUsersMsg={this.sharedWithUsersMessage(row)}\n                                            onClose={() => {\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row + this.props.resources.data.length + 1, false);\n                                                    this.fetchPermissions(resource, row + this.props.resources.data.length + 1);\n                                                });\n                                            }}\n                                        >\n                                            {\n                                                (toggle: () => void) => (\n                                                    <DropdownItem id={'mob-share-' + row} key=\"mob-share\" onClick={toggle}>\n                                                        <ShareAltIcon /> <Msg msgKey=\"share\"/>\n                                                    </DropdownItem>)\n                                            }\n                                        </ShareTheResource>,\n                                        <EditTheResource\n                                            resource={resource}\n                                            permissions={this.state.permissions.get(row)!}\n                                            onClose={() => {\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row + this.props.resources.data.length + 1, false);\n                                                    this.fetchPermissions(resource, row + this.props.resources.data.length + 1);\n                                                });\n                                            }}\n                                        >\n                                            {\n                                                (toggle: () => void) => (\n                                                    <DropdownItem\n                                                        id={'mob-edit-' + row} key=\"mob-edit\"\n                                                        isDisabled={this.numOthers(row) < 0}\n                                                        onClick={toggle}\n                                                    >\n                                                        <EditAltIcon /> <Msg msgKey=\"edit\"/>\n                                                    </DropdownItem>)\n                                            }\n                                        </EditTheResource>,\n                                        <ContinueCancelModal\n                                            render={(toggle: () => void) => (\n                                                <DropdownItem\n                                                    id={'mob-remove-' + row}\n                                                    key=\"mob-remove\"\n                                                    isDisabled={this.numOthers(row) < 0}\n                                                    onClick={toggle}\n                                                >\n                                                    <Remove2Icon /> <Msg msgKey=\"unShare\"/>\n                                                </DropdownItem>\n                                            )}\n                                            modalTitle=\"unShare\"\n                                            modalMessage=\"unShareAllConfirm\"\n                                            onClose={() =>\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row + this.props.resources.data.length + 1, false);\n                                                })\n                                            }\n                                            onContinue={() => this.removeShare(resource, row)\n                                                .then(() => this.fetchPermissions(resource, row + this.props.resources.data.length + 1))}\n                                        />\n                                    ]}\n                                />\n                            </DataListAction>\n                            <DataListAction\n                                id={`actions-${row}`}\n                                visibility={{ default: 'hidden', lg: 'visible' }}\n                                aria-labelledby=\"Row actions\"\n                                aria-label=\"Actions\"\n                            >\n                                <ShareTheResource\n                                    resource={resource}\n                                    permissions={this.state.permissions.get(row)!}\n                                    sharedWithUsersMsg={this.sharedWithUsersMessage(row)}\n                                    onClose={() => this.fetchPermissions(resource, row)}\n                                >\n                                    {\n                                        (toggle: () => void) => (\n                                            <Button id={`share-${row}`} variant=\"link\" onClick={toggle}>\n                                                <ShareAltIcon /> <Msg msgKey=\"share\"/>\n                                            </Button>\n                                        )\n                                    }\n                                </ShareTheResource>\n                                <Dropdown\n                                    id={`action-menu-${row}`}\n                                    isPlain\n                                    position={DropdownPosition.right}\n                                    toggle={<KebabToggle onToggle={isOpen => this.onContextToggle(row, isOpen)} />}\n                                    onSelect={() => this.setState({ isModalActive: true })}\n                                    isOpen={this.state.contextOpen[row]}\n                                    dropdownItems={[\n                                        <EditTheResource\n                                            resource={resource}\n                                            permissions={this.state.permissions.get(row)!}\n                                            onClose={() => {\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row, false);\n                                                    this.fetchPermissions(resource, row);\n                                                });\n                                            }}\n                                        >\n                                            {\n                                                (toggle: () => void) => (\n                                                    <DropdownItem\n                                                        id={'edit-' + row}\n                                                        key=\"edit\"\n                                                        component=\"button\"\n                                                        isDisabled={this.numOthers(row) < 0}\n                                                        onClick={toggle}\n                                                    >\n                                                        <EditAltIcon /> <Msg msgKey=\"edit\"/>\n                                                    </DropdownItem>)\n                                            }\n                                        </EditTheResource>,\n                                        <ContinueCancelModal\n                                            render={(toggle: () => void) => (\n                                                <DropdownItem\n                                                    id={'remove-' + row}\n                                                    key=\"remove\"\n                                                    component=\"button\"\n                                                    isDisabled={this.numOthers(row) < 0}\n                                                    onClick={toggle}\n                                                >\n                                                    <Remove2Icon /> <Msg msgKey=\"unShare\"/>\n                                                </DropdownItem>\n                                            )}\n                                            modalTitle=\"unShare\"\n                                            modalMessage='unShareAllConfirm'\n                                            onClose={() =>\n                                                this.setState({ isModalActive: false }, () => {\n                                                    this.onContextToggle(row, false);\n                                                })\n                                            }\n                                            onContinue={() => this.removeShare(resource, row).then(() => this.fetchPermissions(resource, row))}\n                                        />\n                                    ]}\n                                />\n                            </DataListAction>\n                        </DataListItemRow>\n                        <DataListContent\n                            hasNoPadding={false}\n                            aria-label=\"Session Details\"\n                            id={'ex-expand' + row}\n                            isHidden={!this.state.isRowOpen[row]}\n                        >\n                            <Level hasGutter>\n                                <LevelItem><span /></LevelItem>\n                                <LevelItem id={'shared-with-user-message-' + row}>{this.sharedWithUsersMessage(row)}</LevelItem>\n                                <LevelItem><span /></LevelItem>\n                            </Level>\n                        </DataListContent>\n                    </DataListItem>\n                ))}\n            </DataList>\n        );\n    }\n}\n"],"mappings":"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"}